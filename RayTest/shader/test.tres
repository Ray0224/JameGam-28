[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://dmgnjxihds31d"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ijc1j"]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_idipl"]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_5odf0"]
parameter_name = "Texture2DParameter"

[resource]
code = "shader_type canvas_item;
uniform sampler2D Texture2DParameter;



void fragment() {
// Input:3
	vec2 n_out3p0 = UV;


	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(Texture2DParameter, n_out3p0);


// Output:0
	COLOR.rgb = vec3(n_out2p0.xyz);


}
"
graph_offset = Vector2(-63, 67)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(980, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_ijc1j")
nodes/fragment/2/position = Vector2(120, 180)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_idipl")
nodes/fragment/3/position = Vector2(-200, 140)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture2DParameter_5odf0")
nodes/fragment/4/position = Vector2(-220, 220)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 0, 4, 0, 2, 2, 2, 0, 0, 0)
